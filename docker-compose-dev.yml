services:
  graphite:
    image: graphiteapp/graphite-statsd:1.1.10-4
    volumes:
      - "./graphite_conf/statsd.config.js:/opt/statsd/config/udp.js:ro"
      - "./graphite_conf/statsd.config.js:/opt/statsd/config/tcp.js:ro"
      - "./graphite_conf/graphite.blacklist.conf:/opt/graphite/conf/blacklist.conf:ro"
      - "./graphite_conf/graphite.carbon.conf:/opt/graphite/conf/carbon.conf:ro"
      - "./graphite_conf/graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro"
      - "./graphite:/opt/graphite/storage/:rw"
    ports:
      - "8080:8080"
      - "8125:8125/udp"

  grafana:
    image: efoppiano/grafana:0.1
    ports:
      - "8081:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    depends_on:
      - graphite

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - "8082:8081"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: >
      -storage_driver="statsd"
      -storage_driver_host="graphite:8125"
      -storage_driver_db="cadvisor"
      -storage_driver_buffer_duration="1m0s"
      --enable_metrics=cpu,cpuLoad,disk,diskIO,memory,network
    depends_on:
      - graphite
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    ports:
      - "8888:8080"

  postgres_db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres_data:/data/postgres
    ports:
      - "5432:5432"
  http_java:
    build:
        context: .
        dockerfile: Dockerfile
    ports:
        - "8100:8080"
    depends_on:
      - postgres_db
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USER}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    command: sh -c "sleep 10 && java -jar /app/application.jar"

volumes:
  grafana_config:
    driver: local

networks:
  default:
    attachable: true